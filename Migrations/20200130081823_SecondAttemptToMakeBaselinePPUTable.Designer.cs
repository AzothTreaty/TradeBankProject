// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradeBank3.DBContext;

namespace TradeBank3.Migrations
{
    [DbContext(typeof(TradeBankContext))]
    [Migration("20200130081823_SecondAttemptToMakeBaselinePPUTable")]
    partial class SecondAttemptToMakeBaselinePPUTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TradeBank3.Models.Baseline", b =>
                {
                    b.Property<Guid>("baselineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdTs")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("gdpModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("originModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("originType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("usdModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("version")
                        .HasColumnType("int");

                    b.HasKey("baselineId");

                    b.ToTable("Baseline");
                });

            modelBuilder.Entity("TradeBank3.Models.BaselinePPU", b =>
                {
                    b.Property<Guid>("PaselinePPUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PPU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserInputId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("purchaseCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaselinePPUID");

                    b.HasIndex("UserInputId");

                    b.ToTable("BaselinePPUs");
                });

            modelBuilder.Entity("TradeBank3.Models.UserInput", b =>
                {
                    b.Property<Guid>("UserInputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PPU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("purchaseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("purchaseCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("tradeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserInputId");

                    b.ToTable("UserInput");
                });

            modelBuilder.Entity("TradeBank3.Models.BaselinePPU", b =>
                {
                    b.HasOne("TradeBank3.Models.UserInput", "userInput")
                        .WithMany()
                        .HasForeignKey("UserInputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
